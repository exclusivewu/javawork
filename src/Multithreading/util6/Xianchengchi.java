package Multithreading.util6;

/**
 * @Author: Wuxinwei
 * @Date: 2021/6/21 10:30
 * @Description: 线程池 ： ThreadPoolExecutor
 *
 *什么是线程池：
 * 创建和销毁对象是非常消耗时间的。
 * 创建对象： 需要分配内存等资源。
 * 销毁对象：虽然不需要程序员操心，但是后台的垃圾回收机制一直在跟踪和销毁。
 * 对于经常创建和销毁，使用量特别大的资源，比如在并发情况下的线程，对性能的影响很大。
 * 当线程池不够用，就让任务排个队
 * 提前准备好线程，放在池子里，使用时直接获取引用，不使用时放回池子中，可以避免频繁的创建销毁
 * ，实现重复利用。
 *
 *线程池的好处。
 *  提高相应速度（减少了创建新线程的时间）
 *  降低资源消耗（重复利用线程的线程池，不需要每次都创建）
 *  提高线程的可管理信（避免无休止的创建线程）
 *  减低内存的稳定性（内存溢出）或者cpu耗尽。
 *
 * 线程池的应用场合
 *  需要大量的线程，并且时间要求比较短
 *  对性能要求苛刻，
 *  需要突发情况的大量请求
 *
 */



public class Xianchengchi {
}
